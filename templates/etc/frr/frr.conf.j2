{{ ansible_managed|comment }}

{% if frr_defaults is defined and frr_defaults|length  %}
frr defaults {{ frr_defaults }}
{% endif %}
hostname {{ ansible_hostname }}
password {{ frr_password }}
log {{ frr_logging }}
!
{% if frr_interfaces is defined and frr_interfaces != {} %}
{%   for iface, iface_data in frr_interfaces.items() %}
interface {{ iface }}
{%     if iface_data['description'] is defined %}
  description {{ iface_data['description'] }}
{%     endif %}
{%     if iface_data['ip'] is defined %}
{%       if iface_data['ip'] is string %}
  ip address {{ iface_data['ip'] }}
{%       elif iface_data['ip'] is iterable %}
{%         for ip in iface_data['ip'] if ip|length %}
  ip address {{ ip }}
{%         endfor %}
{%       endif %}
{%     endif %}
{%     if iface_data['ipv6'] is defined %}
{%       if iface_data['ipv6'] is string %}
  ipv6 address {{ iface_data['ipv6'] }}
{%       elif iface_data['ipv6'] is iterable %}
{%         for ipv6 in iface_data['ipv6'] if ipv6|length %}
  ipv6 address {{ ipv6 }}
{%         endfor %}
{%       endif %}
{%     endif %}
{%     if iface_data['auth'] is defined %}
  ip ospf authentication message-digest
  ip ospf message-digest-key {{ iface_data['auth']['id'] }} md5 {{ iface_data['auth']['key'] }}
{%     endif %}
{%     if iface_data['other'] is defined %}
{%       for option in iface_data['other'] %}
  {{ option }}
{%       endfor %}
{%     endif %}
{%   endfor %}
{% endif %}
!
{% if frr_static is defined and frr_static != {} %}
{%   for dest, next_hop in frr_static.items() %}
ip route {{ dest }} {{ next_hop }}
{%   endfor %}
{% endif %}
{% if frr_static_v6 is defined and frr_static_v6 != {} %}
{%   for dest, next_hop in frr_static_v6.items() %}
ipv6 route {{ dest }} {{ next_hop }}
{%   endfor %}
{% endif %}
!
{% if frr_ip_forwarding | default(False) %}
ip forwarding
{% endif %}
{% if frr_ipv6_forwarding | default(False) %}
ipv6 forwarding
{% endif %}
!
{% if frr_daemons['bgpd'] %}
{%   if frr_bgp is defined and frr_bgp != {} %}
{%     for asn, asn_data in frr_bgp['asns'].items() %}
router bgp {{ asn }}
{%       if frr_router_id is defined %}
  bgp router-id {{ frr_router_id }}
{%       endif %}
{%       if asn_data['log_neighbor_changes'] | default(False) %}
  bgp log-neighbor-changes
{%       endif %}
{%       if asn_data['no_ebgp_requires_policy'] | default(frr_no_ebgp_requires_policy) %}
  no bgp ebgp-requires-policy
{%       endif %}
{%       if asn_data['timers'] | default(False) %}
  timers bgp {{ asn_data['timers'] }}
{%       endif %}
{%       if asn_data['graceful_restart'] | default(False) %}
  bgp graceful-restart
{%       endif %}
{%       if asn_data['maximum_paths'] is defined %}
  maximum-paths {{ asn_data['maximum_paths'] }}
{%       endif %}
{%       if asn_data['other'] | default(False) %}
{%         for option in asn_data['other'] %}
  {{ option }}
{%         endfor %}
{%       endif %}
{%       if asn_data['af_v4'] | default(False) %}
  address-family ipv4 unicast
{%         for option in asn_data['af_v4'] %}
    {{ option }}
{%         endfor %}
  exit-address-family
!
{%       endif %}
{%       if asn_data['af_v6'] | default(False) %}
  address-family ipv6 unicast
{%         for option in asn_data['af_v6'] %}
    {{ option }}
{%         endfor %}
  exit-address-family
{%       endif %}
!
{%       if asn_data['neighbors'] is defined %}
{%         for neighbor, neighbor_data in asn_data['neighbors'].items() %}
{%           set x=neighbor_data.__setitem__('is_peer_group', neighbor_data['is_peer_group'] | default(False)) %}
{%         endfor %}
{%         for neighbor, neighbor_data in asn_data['neighbors'].items() | sort(reverse=True, attribute="1.is_peer_group") %}
{%           if neighbor_data['interface'] | default(False) %}
  neighbor {{ neighbor }} interface
{%           endif %}
{%           if neighbor_data['v6only'] | default(False) %}
  neighbor {{ neighbor }} interface v6only
{%           endif %}
{%           if neighbor_data['is_peer_group'] | default(False) %}
  neighbor {{ neighbor }} peer-group
{%           endif %}
{%           if neighbor_data['peer_group'] | default(False) %}
  neighbor {{ neighbor }} peer-group {{ neighbor_data['peer_group'] }}
{%           endif %}
{%           if neighbor_data['asn'] | default(False) %}
  neighbor {{ neighbor }} remote-as {{ neighbor_data['asn'] }}
{%           endif %}
{%           if neighbor_data['password'] | default(False) %}
  neighbor {{ neighbor }} password {{ neighbor_data['password'] }}
{%           endif %}
{%           if neighbor_data['multihop'] | default(False) %}
  neighbor {{ neighbor }} ebgp-multihop {{ neighbor_data['multihop'] }}
{%           endif %}
{%           if neighbor_data['default_originate'] | default(False) %}
  neighbor {{ neighbor }} default-originate
{%           endif %}
{%           if neighbor_data['description'] is defined %}
  neighbor {{ neighbor }} description {{ neighbor_data['description'] }}
{%           endif %}
{%           if neighbor_data['next_hop_self'] | default(False) %}
  neighbor {{ neighbor }} next-hop-self
{%           endif %}
{%           if neighbor_data['timers_connect'] | default(False) %}
  neighbor {{ neighbor }} timers connect {{ neighbor_data['timers_connect'] }}
{%           endif %}
{%           if neighbor_data['bfd_peer'] | default(False) %}
  neighbor {{ neighbor }} bfd
{%           endif %}
{%           if neighbor_data['other'] | default(False) %}
{%             for option in neighbor_data['other'] %}
  neighbor {{ neighbor }} {{ option }}
{%             endfor %}
{%           endif %}
!
{%           if neighbor_data['af_v4'] | default(False) %}
  address-family ipv4 unicast
{%             for option in neighbor_data['af_v4'] %}
    neighbor {{ neighbor }} {{ option }}
{%             endfor %}
  exit-address-family
!
{%           endif %}
{%           if neighbor_data['af_v6'] | default(False) %}
  address-family ipv6 unicast
{%             for option in neighbor_data['af_v6'] %}
    neighbor {{ neighbor }} {{ option }}
{%             endfor %}
  exit-address-family
{%           endif %}
!
{%           if neighbor_data['v4_route_reflector_client'] | default(False) or
                neighbor_data['v4_route_map'] | default(False) %}
  address-family ipv4 unicast
{%             if neighbor_data['v4_route_reflector_client'] | default(False) %}
    neighbor {{ neighbor }} route-reflector-client
{%             endif %}
{%             if neighbor_data['v4_route_map'] | default(False) %}
{%               for _route_map in neighbor_data['v4_route_map'] %}
    neighbor {{ neighbor }} route-map {{ _route_map }}
{%               endfor %}
{%             endif %}
{%             if neighbor_data['route_map'] | default(False) %}
{%               for _route_map in neighbor_data['route_map'] %}
    neighbor {{ neighbor }} route-map {{ _route_map }}
{%               endfor %}
{%             endif %}
  exit-address-family
!
{%           endif %}
{%         endfor %}
{%       endif %}
!
{%       if asn_data['listen_range'] is defined %}
{%         for listen_range, listen_range_peer_group in asn_data['listen_range'].items() %}
  bgp listen range {{ listen_range }} peer-group {{ listen_range_peer_group }}
{%         endfor %}
{%       endif %}
!
{%       if asn_data['networks'] | default(False) or
            asn_data['redistribute'] | default(False) %}
  address-family ipv4 unicast
{%         if asn_data['networks'] | default(False) %}
{%           for network in asn_data['networks'] %}
    network {{ network }}
{%           endfor %}
{%         endif %}
{%         if asn_data['redistribute'] | default(False) %}
{%           for redist_protocol in asn_data['redistribute'] %}
    redistribute {{ redist_protocol }}
{%           endfor %}
{%         endif %}
  exit-address-family
!
!
{%       endif %}
{%       if asn_data['networks_v6'] | default(False) or
            asn_data['redistribute_v6'] | default(False) %}
  address-family ipv6 unicast
{%         if asn_data['networks_v6'] | default(False) %}
{%           for network in asn_data['networks_v6'] %}
    network {{ network }}
{%           endfor %}
{%         endif %}
{%         if asn_data['redistribute_v6'] | default(False) %}
{%           if asn_data['redistribute_v6'] is iterable %}
{%             for redist_protocol in asn_data['redistribute_v6'] %}
    redistribute {{ redist_protocol }}
{%             endfor %}
{%           else %}
{%             for redist_protocol in asn_data['redistribute'] %}
    redistribute {{ redist_protocol }}
{%             endfor %}
{%           endif %}
{%         endif %}
  exit-address-family
!
!
{%       endif %}
{%       if frr_vnc_defaults | default(False) %}
  vnc defaults
    response-lifetime 3600
    exit-vnc
{%       endif %}
{%     endfor %}
{%   endif %}
{% endif %}
!
{% if frr_daemons['bfdd'] and frr_daemons['bgpd'] %}
bfd
{%   if frr_bgp is defined and frr_bgp != {} %}
{%     for asn, asn_data in frr_bgp['asns'].items() %}
{%       if asn_data['neighbors'] is defined %}
{%         for neighbor, neighbor_data in asn_data['neighbors'].items() | sort(reverse=True, attribute="1.is_peer_group") %}
{%           if neighbor_data['bfd_peer'] | default(False) %}
  peer {{ neighbor }}
    no shutdown
{%           endif %}
{%           if neighbor_data['bfd_peer_detect_multiplier'] | default(False) %}
    detect-multiplier {{ neighbor_data['bfd_peer_detect_multiplier'] }}
{%           endif %}
{%           if neighbor_data['bfd_peer_receive_interval'] | default(False) %}
    receive-interval {{ neighbor_data['bfd_peer_receive_interval'] }}
{%           endif %}
{%           if neighbor_data['bfd_peer_transmit_interval'] | default(False) %}
    transmit-interval {{ neighbor_data['bfd_peer_transmit_interval'] }}
{%           endif %}
{%           if neighbor_data['bfd_peer_echo_interval'] | default(False) %}
    echo-interval {{ neighbor_data['bfd_peer_echo_interval'] }}
{%           endif %}
{%           if neighbor_data['bfd_peer_echo_mode'] | default(False) %}
    echo-mode
{%           endif %}
{%           if neighbor_data['bfd_peer_passive_mode'] | default(False) %}
    passive-mode
{%           endif %}
{%           if neighbor_data['bfd_peer_minimum_ttl'] | default(False) %}
    minimum-ttl {{ neighbor_data['bfd_peer_minimum_ttl'] }}
{%           endif %}
{%         endfor %}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endif %}
!
{% if frr_daemons['ospfd'] %}
router ospf
{%       if frr_router_id is defined %}
  router-id {{ frr_router_id }}
{%       endif %}
{%   if frr_ospf is defined and frr_ospf != {} %}
{%     if frr_ospf['areas'] is defined %}
{%       for area, area_data in frr_ospf['areas'].items() %}
{%         for area_network in area_data['networks'] %}
  network {{ area_network }} area {{ area }}
{%         endfor %}
{%         if area_data['auth'] is defined %}
  area {{ area }} authentication message-digest
{%         endif %}
{%         if area_data['type'] is defined %}
  area {{ area }} {{ area_data['type'] }}
{%         endif %}
{%       endfor %}
{%     endif %}
{%     if frr_ospf['log_adjacency_changes'] | default(False) %}
  log-adjacency-changes
{%     endif %}
{%     if frr_ospf['passive_interfaces'] is defined %}
{%       for passive_int in frr_ospf['passive_interfaces'] %}
  passive-interface {{ passive_int }}
{%       endfor %}
{%     endif %}
{%     if frr_ospf['redistribute'] is defined %}
{%       for redist_protocol in frr_ospf['redistribute'] %}
  redistribute {{ redist_protocol }}
{%       endfor %}
{%     endif %}
{%     if frr_ospf['distribute_list'] is defined %}
{%       for acl in frr_ospf['distribute_list'] %}
  distribute-list {{ acl.name }} {{ acl.dir }} {{ acl.protocol }}
{%       endfor %}
{%     endif %}
{%   endif %}
{% endif %}
!
{% if frr_prefix_list is defined and frr_prefix_list != {} %}
{%   for prefix_list_name, sequences in frr_prefix_list.items() %}
{%     for seq, seq_data in sequences.items() %}
{%       if seq_data['prefix'] is defined %}
{%         if seq_data['match'] is defined %}
ip prefix-list {{ prefix_list_name }} seq {{ seq }} {{ seq_data['prefix'] }} {{ seq_data['match'] }}
{%         else %}
ip prefix-list {{ prefix_list_name }} seq {{ seq }} {{ seq_data['prefix'] }}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endfor %}
{% endif %}
!
{% if frr_prefix_list_v6 is defined and frr_prefix_list_v6 != {} %}
{%   for prefix_list_name, sequences in frr_prefix_list_v6.items() %}
{%     for seq, seq_data in sequences.items() %}
{%       if seq_data['prefix'] is defined %}
{%         if seq_data['match'] is defined %}
ipv6 prefix-list {{ prefix_list_name }} seq {{ seq }} {{ seq_data['prefix'] }} {{ seq_data['match'] }}
{%         else %}
ipv6 prefix-list {{ prefix_list_name }} seq {{ seq }} {{ seq_data['prefix'] }}
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endfor %}
{% endif %}
!
{% if frr_route_map is defined and frr_route_map != [] %}
{%   for map_name, sequences in frr_route_map.items() %}
{%     for seq, seq_data in sequences.items() %}
route-map {{ map_name }} {{ seq }}
{%       if seq_data['interface'] is defined %}
  match interface {{ seq_data['interface'] }}
{%       endif %}
{%       if seq_data['prefix_list'] is defined %}
  match ip address prefix-list {{ seq_data['prefix_list'] }}
{%       endif %}
{%       if seq_data['community'] is defined %}
  set community {{ seq_data['community'] }} additive
{%       endif %}
{%       if seq_data['origin'] is defined %}
  set origin {{ seq_data['origin'] }}
{%       endif %}
{%       if seq_data['metric'] is defined %}
  set metric {{ seq_data['metric'] }}
{%       endif %}
!
{%     endfor %}
{%   endfor %}
{% endif %}
!
{% if frr_access_list is defined and frr_access_list != [] %}
{%   for ace in frr_access_list %}
access-list {{ ace }}
{%   endfor %}
{% endif %}
!
